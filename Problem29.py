# Code by @AmirMotefaker

# projecteuler.net
# https://projecteuler.net/problem=29

# Distinct powers
# Problem 29

# Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

# 2**2=4, 2**3=8, 2**4=16, 2**5=32
# 3**2=9, 3**3=27, 3**4=81, 3**5=243
# 4**2=16, 4**3=64, 4**4=256, 4**5=1024
# 5**2=25, 5**3=125, 5**4=625, 5**5=3125
# If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

# 4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
# How many distinct terms are in the sequence generated by a**b for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?

# Solution 1

import time
start_time = time.time()   #Time at the start of program execution

powers = []   # store the values of powers

for a in range(2,101):  # Repeat through numbers
	for b in range(2,101):
		powers.append(a**b)

powers = set(powers)  #removing the duplicates using sets

print (len(powers))  # length of powers

end_time = time.time()   #Time at the end of execution
print ("Time of program execution:", (end_time - start_time))   # Time of program execution



# Solution 2

# import time
# def main():
# 	list_of_numbers = []
# 	for a in range(2,101):
# 		for b in range(2,101):
# 			number = a**b
# 			if number not in list_of_numbers:
# 				list_of_numbers.append(number)
# 	list_of_numbers.sort()
# 	print(len(list_of_numbers))
# start_time = time.time()
# main()
# print('Time taken was {} seconds'.format(time.time()-start_time))



### Answer:  9183
